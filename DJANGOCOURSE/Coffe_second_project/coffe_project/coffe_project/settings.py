"""
Django settings for coffe_project project.

Generated by 'django-admin startproject' using Django 5.2.1.

For more information on this file, see
https://docs.djangoproject.com/en/5.2/topics/settings/

For the full list of settings and their values, see
https://docs.djangoproject.com/en/5.2/ref/settings/
"""

from pathlib import Path
import os
import environ

# Build paths inside the project like this: BASE_DIR / 'subdir'.
BASE_DIR = Path(__file__).resolve().parent.parent
env = environ.Env()
environ.Env.read_env(os.path.join(BASE_DIR, ".env"))

# Quick-start development settings - unsuitable for production
# See https://docs.djangoproject.com/en/5.2/howto/deployment/checklist/

# SECURITY WARNING: keep the secret key used in production secret!
SECRET_KEY = "django-insecure-syy!k(6bs+tuk(7=+$lpt%^941*-4_l9=74ppzg_b=*y0d%mn8"

# SECURITY WARNING: don't run with debug turned on in production!
DEBUG = True

ALLOWED_HOSTS = []


# Application definition

INSTALLED_APPS = [
    "django.contrib.admin",
    "django.contrib.auth",
    "django.contrib.contenttypes",
    "django.contrib.sessions",
    "django.contrib.messages",
    "django.contrib.staticfiles",
    "django_extensions",
    "crispy_forms",
    "crispy_tailwind",
    "rest_framework",
    "products",
    "users",
    "orders",
]

MIDDLEWARE = [
    "django.middleware.security.SecurityMiddleware",
    "django.contrib.sessions.middleware.SessionMiddleware",
    "django.middleware.common.CommonMiddleware",
    "django.middleware.csrf.CsrfViewMiddleware",
    "django.contrib.auth.middleware.AuthenticationMiddleware",
    "django.contrib.messages.middleware.MessageMiddleware",
    "django.middleware.clickjacking.XFrameOptionsMiddleware",
]

ROOT_URLCONF = "coffe_project.urls"

TEMPLATES = [
    {
        "BACKEND": "django.template.backends.django.DjangoTemplates",
        "DIRS": [BASE_DIR / "templates"],
        "APP_DIRS": True,
        "OPTIONS": {
            "context_processors": [
                "django.template.context_processors.request",
                "django.contrib.auth.context_processors.auth",
                "django.contrib.messages.context_processors.messages",
            ],
        },
    },
]


WSGI_APPLICATION = "coffe_project.wsgi.application"


# Database
# https://docs.djangoproject.com/en/5.2/ref/settings/#databases

DATABASES = {
    # 'default': {
    #      # ------------------------------------------------------------------
    #     # ENGINE:
    #     #   Specifies the database backend to use. For PostgreSQL, always use
    #     #   'django.db.backends.postgresql'.
    #     #   (Other options include 'django.db.backends.sqlite3', 'django.db.backends.mysql', etc.)
    #     'ENGINE': 'django.db.backends.postgresql',
    #      # ------------------------------------------------------------------
    #     # NAME:
    #     #   The exact name of the database you want Django to connect to.
    #     #   - If you left “DB name” blank when creating the RDS instance, the
    #     #     default database is 'postgres'.
    #     #   - If you created your own database (e.g., 'coffe_project_db'),
    #     #     put that exact name here.
    #     'NAME': 'postgres',
    #      # HOST:
    #     #   The hostname or endpoint of the database server.
    #     #   - Locally, this is usually 'localhost' or '127.0.0.1'.
    #     #   - For AWS RDS, use the Endpoint shown in the RDS console
    #     #     (without the port). Example:
    #     #     'db-course-django.cxm8aoyauzfm.us-east-2.rds.amazonaws.com'
    #     'HOST': 'db-course-django.cxm8aoyauzfm.us-east-2.rds.amazonaws.com', #This is the Endpoint
    #      # PORT:
    #     #   The TCP port where PostgreSQL is listening.
    #     #   - The default port for PostgreSQL is '5432', both locally and on RDS
    #     #     (unless you explicitly changed it).
    #     'PORT': '5432',
    #        # USER:
    #     #   The database user that Django will use to authenticate.
    #     #   Must match the “Master username” in RDS (or another role you created).
    #     #   For example: 'db_postgres'
    #     'USER': 'db_postgres', # Here is the Master username in RDS
    #      # PASSWORD:
    #     #   The password for the specified database user.
    #     #   - On RDS, this is the “Master password” or the password you set
    #     #     for that role.
    #     #   - Locally, it’s whatever password you assigned when you created the role.
    #     'PASSWORD': 'fire1602', #The password in aws
    # }
    "default": env.db("DJANGO_DB_URL")
}


# Password validation
# https://docs.djangoproject.com/en/5.2/ref/settings/#auth-password-validators

AUTH_PASSWORD_VALIDATORS = [
    {
        "NAME": "django.contrib.auth.password_validation.UserAttributeSimilarityValidator",
    },
    {
        "NAME": "django.contrib.auth.password_validation.MinimumLengthValidator",
    },
    {
        "NAME": "django.contrib.auth.password_validation.CommonPasswordValidator",
    },
    {
        "NAME": "django.contrib.auth.password_validation.NumericPasswordValidator",
    },
]


# Internationalization
# https://docs.djangoproject.com/en/5.2/topics/i18n/

LANGUAGE_CODE = "en-us"

TIME_ZONE = "UTC"

USE_I18N = True

USE_TZ = True


# Static files (CSS, JavaScript, Images)
# https://docs.djangoproject.com/en/5.2/howto/static-files/

STATIC_URL = "/static/"

CRISPY_ALLOWED_TEMPLATE_PACKS = "tailwind"

CRISPY_TEMPLATE_PACK = "tailwind"

STATICFILES_DIRS = [
    BASE_DIR / "static",
]
# Default primary key field type
# https://docs.djangoproject.com/en/5.2/ref/settings/#default-auto-field

DEFAULT_AUTO_FIELD = "django.db.models.BigAutoField"

MEDIA_URL = "/media/"
MEDIA_ROOT = os.path.join(BASE_DIR, "media")

LOGIN_REDIRECT_URL = "products:main"
LOGIN_URL = "users:login"


REST_FRAMEWORK = {
    # Use Django's standard `django.contrib.auth` permissions,
    # or allow read-only access for unauthenticated users.
    "DEFAULT_PERMISSION_CLASSES": [
        "rest_framework.permissions.DjangoModelPermissionsOrAnonReadOnly"
    ]
}
